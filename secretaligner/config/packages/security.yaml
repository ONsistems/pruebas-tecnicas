security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Entity\User:
            algorithm: bcrypt
    providers:
        users:
            chain:
                providers: [users_in_memory, our_db_provider]
        users_in_memory: 
            memory:
                users:
                    admin:
                        password: ibaniez
                        roles: 'ROLE_ADMIN'
                    mortadelo:
                        password: agente_01
                        roles: 'ROLE_USER'
                    filemon:
                        password: agente_02
                        roles: 'ROLE_USER'
        our_db_provider:
            entity:
                class: User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            pattern:    ^/
            http_basic: ~
            provider: users_in_memory
            form_login:
                login_path: login
                check_path: login
                default_target_path: todo_list
            logout:
                path: /logout
                target: /login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/login', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/', roles: [ROLE_ADMIN, ROLE_USER] }
